version: "3.8"

services:
  kafka-1:
    image: apache/kafka:3.8.1
    container_name: kafka-1
    ports:
      - "19092:19092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: "CONTROLLER://0.0.0.0:9093,PLAINTEXT://0.0.0.0:19092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-1:19092"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    volumes:
      - kafka1_data:/var/lib/kafka/data
    networks:
      - deployment
    restart: unless-stopped

  kafka-2:
    image: apache/kafka:3.8.1
    container_name: kafka-2
    ports:
      - "29092:19092"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: "CONTROLLER://0.0.0.0:9093,PLAINTEXT://0.0.0.0:19092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-2:19092"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    volumes:
      - kafka2_data:/var/lib/kafka/data
    networks:
      - deployment
    restart: unless-stopped

  kafka-3:
    image: apache/kafka:3.8.1
    container_name: kafka-3
    ports:
      - "39092:19092"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: "CONTROLLER://0.0.0.0:9093,PLAINTEXT://0.0.0.0:19092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-3:19092"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    volumes:
      - kafka3_data:/var/lib/kafka/data
    networks:
      - deployment
    restart: unless-stopped

  topic-init:
    image: apache/kafka:3.8.1
    container_name: kafka-topic-init
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    volumes:
      - ./create-topic.sh:/create-topic.sh:ro
    entrypoint: ["/bin/bash", "/create-topic.sh"]
    command: ["build-logs"]
    networks:
      - deployment
    restart: "no"

  console:
    image: docker.redpanda.com/redpandadata/console:v2.5.2
    container_name: kafka-console
    ports:
      - "8080:8080"
    entrypoint: /bin/sh
    command: >
      -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: >
        kafka:
          brokers: ["kafka-1:19092","kafka-2:19092","kafka-3:19092"]
          schemaRegistry:
            enabled: false
    networks:
      - deployment
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    restart: always

  clickhouse:
    image: clickhouse/clickhouse-server:23.4
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./init-table.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: default
      CLICKHOUSE_DB: logs
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - deployment
    restart: unless-stopped

  application:
    image: rohith1809/vortex:latest
    container_name: vortex-app
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - clickhouse
    ports:
      - "3000:3000"
      - "5000:5000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - deployment
    restart: unless-stopped
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock

volumes:
  kafka1_data:
  kafka2_data:
  kafka3_data:

networks:
  deployment:
    name: deployment
    driver: bridge
