---
- hosts: kafka_nodes
  become: TRUE
  vars:
    kafka_version: "3.8.1"
    kafka_dir: "/opt/kafka"
  tasks:
    - name: Install dependencies
      apt:
        name: [openjdk-11-jdk, wget, tar]
        state: present
        update_cache: yes

    - name: Download Kafka
      get_url:
        url: "https://downloads.apache.org/kafka/{{ kafka_version }}/kafka_2.13-{{ kafka_version }}.tgz"
        dest: /tmp/kafka.tgz

    - name: Extract Kafka
      unarchive:
        src: /tmp/kafka.tgz
        dest: "{{ kafka_dir }}"
        remote_src: yes
        creates: "{{ kafka_dir }}/kafka_2.13-{{ kafka_version }}"

    - name: Symlink Kafka
      file:
        src: "{{ kafka_dir }}/kafka_2.13-{{ kafka_version }}"
        dest: "{{ kafka_dir }}/current"
        state: link
        force: yes

    - name: Configure Kafka properties
      copy:
        dest: "{{ kafka_dir }}/current/config/kraft/server.properties"
        content: |
          process.roles=broker,controller
          node.id={{ ansible_hostname | regex_replace('[^0-9]', '') }}
          listeners=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
          advertised.listeners=PLAINTEXT://{{ ansible_host }}:9092
          controller.listener.names=CONTROLLER
          controller.quorum.voters=1@{{ hostvars['node1']['ansible_host'] }}:9093,2@{{ hostvars['node2']['ansible_host'] }}:9093,3@{{ hostvars['node3']['ansible_host'] }}:9093
          inter.broker.listener.name=PLAINTEXT
          log.dirs={{ kafka_dir }}/logs
          offsets.topic.replication.factor=3
          transaction.state.log.replication.factor=3
          transaction.state.log.min.isr=2
          group.initial.rebalance.delay.ms=0
          auto.create.topics.enable=false

    - name: Start Kafka service
      shell: |
        nohup {{ kafka_dir }}/current/bin/kafka-server-start.sh {{ kafka_dir }}/current/config/kraft/server.properties > /var/log/kafka.log 2>&1 &
      async: 0
      poll: 0
